button(md-fab, class="my-fab", (click)="addTransaction()")
  md-icon add
div(id="transactionsTableStart")
div(class="card-container", infiniteScroll, (scrolled)="transactionsService.nextPage()", [infiniteScrollDisabled]="transactionsService.isLoadingNextPage() || transactionsService.isLastPage()", [immediateCheck]="true")
  ng-container(*ngFor="let transaction of transactionsService.transactions")
    transaction-editor(*ngIf="isEditing(transaction); else elseBlock", [transaction]="transaction", (done)="stopEditing()")
    ng-template(#elseBlock)
      md-card(class="small-card")
        md-card-title
          div(style="display: flex; align-items: center;")
            span(style="align-self: center;") {{transaction.description}}
            span(style="flex: 1 1 auto;")
            button(md-icon-button, [mdMenuTriggerFor]="transactionMenu", style="align-self: flex-start;", aria-label="#{__('Open menu')}")
              md-icon more_vert
            md-menu(#transactionMenu="mdMenu")
              button(md-menu-item, (click)="duplicateTransaction(transaction)")
                md-icon content_copy
                span #{__("Duplicate")}
              button(md-menu-item, (click)="startEditing(transaction)")
                md-icon edit
                span #{__("Edit")}
              button(md-menu-item, (click)="deleteTransaction(transaction)")
                md-icon delete_forever
                span #{__("Delete")}
        md-card-subtitle
          | {{transaction.date | date}}
        md-card-content
          md-chip-list
            md-chip(*ngFor="let tag of transaction.tags", selectable="false") {{tag}}
        md-card-content([ngClass]="{'mat-input-error': !transactionsService.isAmountOk(transaction)}")
          div(style="display: flex; align-items: top;")
            div(style="display: block;")
              ng-template([ngIf]="transactionsService.isExpenseIncomeTransaction(transaction)")
                div(*ngFor="let account of transactionsService.getAccounts(transaction, transactionsService.allAccountsPredicate); last as last")
                  | {{account.name}}{{last ? '' : ', '}}
              ng-template([ngIf]="transactionsService.isTransferTransaction(transaction)")
                div(*ngFor="let account of transactionsService.getAccounts(transaction, transactionsService.fromAccountsPredicate); last as last; first as first")
                  | {{first && !last ? '(' : ''}}{{account.name}}{{last ? '' : ', '}}{{last && !first ? ')' : ''}}
                md-icon arrow_downward
                div(*ngFor="let account of transactionsService.getAccounts(transaction, transactionsService.toAccountsPredicate); last as last; first as first")
                  | {{first && !last ? '(' : ''}}{{account.name}}{{last ? '' : ', '}}{{last && !first ? ')' : ''}}
            span(style="flex: 1 1 auto;")
            div(style="display: block;")
              div(*ngFor="let currencyAmount of totalsByCurrency(transaction)", style="text-align: right")
                span(*ngIf="transactionsService.isTransferTransaction(transaction)")
                  | &sum;
                | {{currencyAmount.amount | number:"1.2-2"}} {{currencyAmount.currency}}
div(*ngIf="transactionsService.isLoadingNextPage()", class="card-container")
  md-card(class="large-card")
    md-card-content
      div(style="display: flex; align-items: center;")
        md-icon(class="rotate") sync
        span(style="align-self: center;") #{__('Loading...')}
