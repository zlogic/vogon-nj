form(name="transactionEditorForm", autocomplete="off", novalidate)
	div(class="panel panel-default")
		div(class="panel-heading")
			h3
				| #{__('Edit transaction')}
		div(class="panel-body")
			div(class="row form-control-static")
				div(class="form-inline col-md-12")
					div(class="form-group")
						span(ng-class="{ 'has-error': transactionEditorForm.description.$invalid }")
							input(type="text", ng-model="transaction.description", class="form-control", placeholder=__('Enter transaction description') name="description", required)
					=' '
					div(class="form-group")
						select(ng-model="transaction.type", ng-init="transaction.type = transaction.type || transactionTypes[0].value", ng-options="transactionType.value as transactionType.name for transactionType in transactionTypes", class="form-control")
					=' '
					div(class="form-group")
						div(class="input-group", ng-class="{ 'has-error': transactionEditorForm.date.$invalid }" )
							input(type="text", class="form-control", uib-datepicker-popup="yyyy-MM-dd", ng-model="transaction.date", name="date", is-open="calendar.opened")
							span(class="input-group-btn")
								button(type="button", class="btn btn-default", ng-click="openCalendar($event)")
									span(class="glyphicon glyphicon-calendar")
					tags-input(class="bootstrap", ng-model="tags", placeholder=__('Add tags') on-tag-added="syncTags()", on-tag-removed="syncTags()", replace-spaces-with-dashes="false", add-on-comma="false")
						auto-complete(source="tagsService.autocompleteQuery($query)")
			div(class="row form-control-static")
				div(class="col-md-12")
					button(ng-click="addTransactionComponent()", class="btn btn-default", type="button")
						span(class="glyphicon glyphicon-plus", aria-hidden="true")
						|  #{__('Add component')}
			div(class="row form-control-static", ng-repeat="component in transaction.FinanceTransactionComponents")
				div(class="form-inline col-md-12")
					ng-form(name="transactionForm", autocomplete="off")
						div(class="form-group")
							span(ng-class="{ 'has-error': transactionForm.account.$invalid }" )
								select(ng-model="component.AccountId", ng-options="account.id as account.name for account in accountService.accounts | filter:isAccountVisible", class="form-control", name="account", required)
						=' '
						div(class="form-group")
							span(ng-class="{ 'has-error': transactionForm.amount.$invalid }")
								div(class="input-group")
									input(type="text", ng-model="component.amount", placeholder=__('Enter amount') class="text-right form-control", name="amount", ng-pattern="/^-?\\\d+(\\\.\\\d+)?$/", required)
									span(class="input-group-addon")
										| {{accountService.getAccount(component.AccountId).currency}}
						=' '
						div(class="form-group")
							button(ng-click="deleteTransactionComponent(component)", class="btn btn-default", type="button")
								span(class="glyphicon glyphicon-trash", aria-hidden="true")
								|  #{__('Delete')}
		div(class="panel-footer")
			button(ng-click="deleteTransaction()", class="btn btn-danger", type="button")
				span(class="glyphicon glyphicon-trash", aria-hidden="true")
				|  #{__('Delete')}
			=' '
			button(ng-click="cancelEditing()", class="btn btn-default", type="button")
				span(class="glyphicon glyphicon-remove", aria-hidden="true")
				|  #{__('Cancel')}
			=' '
			button(ng-click="submitEditing()", class="btn btn-primary", type="submit", ng-disabled="transactionEditorForm.$invalid")
				span(class="glyphicon glyphicon-ok", aria-hidden="true")
				|  #{__('Apply')}
